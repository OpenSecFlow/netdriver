name: Build Test

on:
  pull_request:
    branches: [master, main]
    paths:
      - 'bases/**'
      - 'components/**'
      - 'projects/**'
      - 'pyproject.toml'
      - 'poetry.lock'
  push:
    branches: [master, main]
    paths:
      - 'bases/**'
      - 'components/**'
      - 'projects/**'
      - 'pyproject.toml'
      - 'poetry.lock'

jobs:
  build:
    name: Build packages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']
        project: ['agent', 'simunet']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: false

      - name: Install Poetry plugins
        run: |
          poetry self add poetry-multiproject-plugin
          poetry self add poetry-polylith-plugin

      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Build ${{ matrix.project }}
        run: |
          echo "Building netdriver-${{ matrix.project }}..."
          poetry build -P projects/${{ matrix.project }} --format wheel --clean

      - name: Check package metadata
        run: |
          python -m pip install twine
          twine check projects/${{ matrix.project }}/dist/*.whl

      - name: Verify package contents
        run: |
          python -m zipfile -l projects/${{ matrix.project }}/dist/*.whl

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: netdriver-${{ matrix.project }}-${{ matrix.python-version }}
          path: projects/${{ matrix.project }}/dist/*.whl
          retention-days: 7

  verify:
    name: Verify builds
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: List artifacts
        run: |
          echo "Built packages:"
          find . -name "*.whl" -type f -exec ls -lh {} \;

      - name: Build summary
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Package | Size | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|------|--------|" >> $GITHUB_STEP_SUMMARY
          for whl in $(find . -name "*.whl" -type f); do
            name=$(basename "$whl")
            size=$(du -h "$whl" | cut -f1)
            echo "| $name | $size | âœ“ |" >> $GITHUB_STEP_SUMMARY
          done
