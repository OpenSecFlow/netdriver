name: Release and Publish

on:
  push:
    tags:
      - '*.*.*'
      - 'v*.*.*'

jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.version.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: version
        run: |
          # Remove refs/tags/ prefix
          VERSION=${GITHUB_REF#refs/tags/}
          # Remove 'v' prefix if present
          VERSION=${VERSION#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## NetDriver ${{ steps.version.outputs.version }}

            ### 📦 Packages

            - **netdriver-agent** - FastAPI-based REST API service for network device automation
            - **netdriver-simunet** - SSH server simulation for testing

            ### 📥 Installation

            ```bash
            pip install netdriver-agent==${{ steps.version.outputs.version }}
            pip install netdriver-simunet==${{ steps.version.outputs.version }}
            ```

            ### 📝 Changes

            See [CHANGELOG](https://github.com/OpenSecFlow/netdriver/blob/master/CHANGELOG.md) for detailed changes.

  test:
    name: Run tests
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/opensecflow/netdriver/python-poetry:3.12
    permissions:
      contents: read
      packages: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify Poetry installation
        run: |
          poetry --version
          poetry self show plugins

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Run pylint
        run: |
          echo "Running pylint checks..."
          poetry run pylint bases/ components/ --exit-zero --output-format=colorized || true
        continue-on-error: true

      - name: Run pytest
        run: |
          echo "Running pytest..."
          poetry run pytest -v --tb=short

  build-and-publish:
    name: Build and Publish to PyPI
    needs: [create-release, test]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/opensecflow/netdriver/python-poetry:3.12
    permissions:
      contents: write
      packages: read
      id-token: write  # Required for trusted publishing
    strategy:
      matrix:
        project: ['agent', 'simunet']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify Poetry installation
        run: |
          poetry --version
          poetry self show plugins

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Build ${{ matrix.project }}
        run: |
          echo "Building netdriver-${{ matrix.project }}..."
          poetry build-project -C projects/${{ matrix.project }} --format wheel --clean

      - name: Check package metadata
        run: |
          pip install twine
          twine check projects/${{ matrix.project }}/dist/*.whl

      - name: Publish to PyPI
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          poetry config pypi-token.pypi "$PYPI_TOKEN"
          echo "Publishing netdriver-${{ matrix.project }} to PyPI..."
          poetry publish -P projects/${{ matrix.project }} --skip-existing

      - name: Upload wheel to release
        uses: softprops/action-gh-release@v1
        with:
          files: projects/${{ matrix.project }}/dist/*.whl
          tag_name: ${{ github.ref_name }}

  verify:
    name: Verify publication
    needs: build-and-publish
    runs-on: ubuntu-latest

    steps:
      - name: Wait for PyPI to process
        run: sleep 60

      - name: Verify packages on PyPI
        run: |
          echo "Checking netdriver-agent on PyPI..."
          curl -s https://pypi.org/pypi/netdriver-agent/json | jq -r '.info.version' || echo "Package not found yet"

          echo "Checking netdriver-simunet on PyPI..."
          curl -s https://pypi.org/pypi/netdriver-simunet/json | jq -r '.info.version' || echo "Package not found yet"

      - name: Generate summary
        run: |
          echo "## Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Release created successfully" >> $GITHUB_STEP_SUMMARY
          echo "✅ Packages published to PyPI" >> $GITHUB_STEP_SUMMARY
          echo "✅ Wheel files attached to release" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Installation" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "pip install netdriver-agent" >> $GITHUB_STEP_SUMMARY
          echo "pip install netdriver-simunet" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
